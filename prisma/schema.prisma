// prisma/schema.prisma

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id        String @id @default(cuid())
  firstName String
  lastName  String
  email     String @unique
  password  String
  gender    String
  role      Role   @default(USER)

  swipesFrom Swipe[] @relation("SwipesFrom")
  swipesTo   Swipe[] @relation("SwipesTo")

  matchesA Match[] @relation("MatchesA")
  matchesB Match[] @relation("MatchesB")

  sentMessages     Message[] @relation("Sender")
  receivedMessages Message[] @relation("Receiver")
}

model Swipe {
  id           String      @id @default(cuid())
  userId       String
  targetUserId String
  action       SwipeAction
  createdAt    DateTime    @default(now())

  user       User @relation("SwipesFrom", fields: [userId], references: [id])
  targetUser User @relation("SwipesTo", fields: [targetUserId], references: [id])
}

model Match {
  id        String   @id @default(cuid())
  userAId   String
  userBId   String
  createdAt DateTime @default(now())

  userA User @relation("MatchesA", fields: [userAId], references: [id])
  userB User @relation("MatchesB", fields: [userBId], references: [id])

  messages Message[]
}

model Message {
  id         String   @id @default(cuid())
  content    String
  senderId   String
  receiverId String
  matchId    String
  createdAt  DateTime @default(now())

  match    Match @relation(fields: [matchId], references: [id])
  sender   User  @relation("Sender", fields: [senderId], references: [id])
  receiver User  @relation("Receiver", fields: [receiverId], references: [id])
}

enum Role {
  ADMIN
  USER
}

enum SwipeAction {
  LIKE
  DISLIKE
}
